<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.service"/>
    <context:component-scan base-package="com.dao"/>

    <!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->


    <!-- 配置数据源 -->
     <bean id="dataSource"
           class="org.springframework.jdbc.datasource.DriverManagerDataSource">
         <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
         <property name="url" value="jdbc:mysql://localhost:3306/mydatabase"/>
         <property name="username" value="root"/>
         <property name="password" value="123456"/>
     </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
          p:dataSource-ref="dataSource"/>



    <!--<bean id = "validator"-->
          <!--class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>-->


    <!-- 配置Jdbc模板  -->
    <!--<bean id="userDao" class="com.dao.UserDao">-->
        <!--<property name="dataSource"  ref="dataSource" />-->
    <!--</bean>-->
    <!--<bean id="loginLogDao" class="com.dao.LoginLogDao">-->
        <!--<property name="dataSource"  ref="dataSource" />-->
    <!--</bean>-->


    <bean id="user" class="com.entity.User"/>
    <bean id="loginLog" class="com.entity.LoginLog"/>
    <bean id="hdfsDao" class="com.dao.HDFSDaoImpl">
        <constructor-arg name="conf" type="org.apache.hadoop.conf.Configuration"
                         ref="org.apache.hadoop.conf.Configuration"/>
    </bean>


    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource" />
    <bean id="org.apache.hadoop.conf.Configuration" class="org.apache.hadoop.conf.Configuration"/>

    <!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 -->
    <!--
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
       <tx:attributes>
           <tx:method name="*" />
       </tx:attributes>
   </tx:advice>
  -->
   <!--
   <aop:config proxy-target-class="true">
       <aop:pointcut id="serviceMethod" expression=" execution(* com.service..*(..))" />
       <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
   </aop:config>
-->
    <!--
    <aop:config>
        <aop:pointcut id="serviceMethod" expression="execution(* com.service.*.*(..))" />
        -->
        <!--suppress RequiredBeanTypeInspection -->
    <!--
        <aop:advisor advice-ref="txAdvice"  pointcut-ref="serviceMethod" />
    </aop:config>
    -->


</beans>